<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

<!--   <parent> -->
<!--     <groupId>org.codehaus.sonar-plugins</groupId> -->
<!--     <artifactId>parent</artifactId> -->
<!--     <version>19</version> -->
<!--   </parent> -->
 <groupId>org.codehaus.sonar-plugins</groupId>
  <artifactId>iisi-sonar-custom-plugins-ldap</artifactId>
  <version>1.5-SNAPSHOT</version>
  <packaging>sonar-plugin</packaging>

  <name>Sonar IIIS LDAP Plugin</name>
  <description>Delegates authentication to LDAP.</description>
  <url>http://redirect.sonarsource.com/plugins/ldap.html</url>
  <inceptionYear>2009</inceptionYear>
  <organization>
    <name>SonarSource</name>
    <url>http://www.sonarsource.com</url>
  </organization>
  

  <developers>
    <developer>
      <id>godin</id>
      <name>Evgeny Mandrikov</name>
      <timezone>+3</timezone>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Henri Gomez</name>
      <timezone>+1</timezone>
    </contributor>
  </contributors>

  <scm>
    <connection>scm:git:git@github.com:SonarCommunity/sonar-ldap.git</connection>
    <developerConnection>scm:git:git@github.com:SonarCommunity/sonar-ldap.git</developerConnection>
    <url>https://github.com/SonarCommunity/sonar-ldap</url>
    <tag>HEAD</tag>
  </scm>
  <issueManagement>
    <system>JIRA</system>
    <url>http://jira.codehaus.org/browse/SONARPLUGINS/component/14293</url>
  </issueManagement>
  <ciManagement>
    <system>Bamboo</system>
    <url>http://ci.codehaus.org/browse/SONAR-LDAP</url>
  </ciManagement>

  <properties>
    <sonar.version>3.0</sonar.version>
    <sonar.pluginName>LDAP</sonar.pluginName>
    <sonar.pluginClass>org.sonar.plugins.ldap.LdapPlugin</sonar.pluginClass>

    <version.org.apache.directory.server>1.5.5</version.org.apache.directory.server>
    <version.org.opends>2.2.0</version.org.opends>

    <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${sonar.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.8.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>0.9.30</version>
      <scope>test</scope>
    </dependency>

    <!-- ApacheDS -->
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-core</artifactId>
      <version>${version.org.apache.directory.server}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-server-jndi</artifactId>
      <version>${version.org.apache.directory.server}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.directory.server</groupId>
      <artifactId>apacheds-protocol-kerberos</artifactId>
      <version>${version.org.apache.directory.server}</version>
      <scope>test</scope>
    </dependency>
<dependency>
	<groupId>org.codehaus.sonar</groupId>
	<artifactId>sonar-packaging-maven-plugin</artifactId>
	<version>1.12.1</version>
</dependency>

    <!-- OpenDS -->
    <!--
    <dependency>
        <groupId>org.opends</groupId>
        <artifactId>opends</artifactId>
        <version>${version.org.opends}</version>
        <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>berkeleydb</groupId>
        <artifactId>je</artifactId>
        <version>3.2.76</version>
        <scope>test</scope>
    </dependency>
    -->
  </dependencies>
 <build>
        <!-- TODO 3: Change SourceDirectory so it fits to your path containing all you sources
        use / (slash) instead of . (dot) if you are using packages. Maybe just "src" could also work fine -->
     <!--    <sourceDirectory>src/my/package</sourceDirectory> -->
        <!-- TODO 3 END -->
        <plugins>
            <plugin>
                <groupId>org.codehaus.sonar</groupId>
                <artifactId>sonar-packaging-maven-plugin</artifactId>
                <version>1.12.1</version>
                <extensions>true</extensions>
                <configuration>
                    <!-- TODO 4: Change path to your PluginClass -->
                    <pluginClass>org.sonar.plugins.ldap.LdapPlugin</pluginClass>
                    <!-- TODO 4 END -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${jdk.min.version}</source>
                    <target>${jdk.min.version}</target>
                </configuration>
            </plugin>
            <!--   <plugin>
              UTF-8 bundles are not supported by Java, so they must be converted 
                    during build
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native2ascii-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>native2ascii</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
             -->
        </plugins>
        <sourceDirectory>src/main/java</sourceDirectory>
        <outputDirectory>target/classes</outputDirectory>
    </build>
</project>
